..
.. SPDX-License-Identifier: Apache-2.0
..

:github_url: https://github.com/IBM-Blockchain/ansible-collection/edit/master/plugins/modules/enrolled_identity.py


enrolled_identity -- Manage an enrolled Hyperledger Fabric identity
===================================================================

.. contents::
   :local:
   :depth: 1


Synopsis
--------

Enroll, re-enroll, or delete an enrolled Hyperledger Fabric identity by using the IBM Blockchain Platform.

This module works with the IBM Blockchain Platform managed service running in IBM Cloud, or the IBM Blockchain Platform software running in a Red Hat OpenShift or Kubernetes cluster.






Parameters
----------

  api_endpoint (optional, str, None)
    The URL for the IBM Blockchain Platform console.


  api_authtype (optional, str, None)
    ``ibmcloud`` - Authenticate to the IBM Blockchain Platform console using IBM Cloud authentication. You must provide a valid API key using *api_key*.

    ``basic`` - Authenticate to the IBM Blockchain Platform console using basic authentication. You must provide both a valid API key using *api_key* and API secret using *api_secret*.


  api_key (optional, str, None)
    The API key for the IBM Blockchain Platform console.


  api_secret (optional, str, None)
    The API secret for the IBM Blockchain Platform console.

    Only required when *api_authtype* is ``basic``.


  api_timeout (optional, integer, 60)
    The timeout, in seconds, to use when interacting with the IBM Blockchain Platform console.


  api_token_endpoint (optional, str, https://iam.cloud.ibm.com/identity/token)
    The IBM Cloud IAM token endpoint to use when using IBM Cloud authentication.

    Only required when *api_authtype* is ``ibmcloud``, and you are using IBM internal staging servers for testing.


  state (optional, str, present)
    ``absent`` - A certificate authority matching the specified name will be stopped and removed.

    ``present`` - Asserts that a certificate authority matching the specified name and configuration exists. If no certificate authority matches the specified name, a certificate authority will be created. If a certificate authority matches the specified name but the configuration does not match, then the certificate authority will be updated, if it can be. If it cannot be updated, it will be removed and re-created with the specified configuration.


  certificate_authority (optional, raw, None)
    The certificate authority to use to enroll this identity.

    You can pass a string, which is the display name of a certificate authority registered with the IBM Blockchain Platform console.

    You can also pass a dictionary, which must match the result format of one of the :ref:`certificate_authority_info <certificate_authority_info_module>` or :ref:`certificate_authority <certificate_authority_module>` modules.


  name (optional, str, None)
    The name of the enrolled identity.


  enrollment_id (optional, str, None)
    The enrollment ID, or user name, of an identity registered on the certificate authority for this peer.


  enrollment_secret (optional, str, None)
    The enrollment secret, or password, of an identity registered on the certificate authority for this peer.


  path (optional, any, None)
    The path to the JSON file where the enrolled identity will be stored.









Examples
--------

.. code-block:: yaml+jinja

    



Return Values
-------------

  enrolled_identity (, dict, )
    The enrolled identity.


    name (, str, )
      The name of the enrolled identity.


    cert (, str, )
      The base64 encoded certificate of the enrolled identity.


    private_key (, str, )
      The base64 encoded private key of the enrolled identity.


    ca (, str, )
      The base64 encoded CA certificate chain of the enrolled identity.






Status
------




- This  is not guaranteed to have a backwards compatible interface. *[preview]*


- This  is maintained by community.



Authors
~~~~~~~

- Simon Stone (@sstone1)

